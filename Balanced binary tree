Ques:
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

 
 
 code:
 class Solution {
    public int height(TreeNode root) {
        if(root == null) {
            return 0;
        }
        int lh=height(root.left);
        if(lh==-1) return -1;
        int rh=height(root.right);
        if(rh==-1) return -1;
        
        if(Math.abs(lh-rh)>1) return -1;
        return Math.max(lh, rh)+1;
    }
    public boolean isBalanced(TreeNode root) {
        return height(root) != -1;
    }
}
