# Segregate even and odd nodes in a likedlist
Ques: Given a link list of size N, modify the list such that all the even numbers appear before all the odd numbers in the modified list. The order of appearance of numbers within each segregation should be same as that in the original list.

Code:
 class Solution{
    Node divide(int N, Node head){
        // code here
        int even[]=new int[N];
        int odd[]=new int[N];
        Node temp=head;
        int i=0, j=0;
        
        while(temp!=null){
            if(temp.data%2==0){
                even[i]=temp.data;
                i++;
            }
            else{
                odd[j]=temp.data;
                j++;
            }
            temp=temp.next;
        }
        
        int l=0, k=0;
        temp=head;
        
        while(temp!=null){
            if(l<i) {
                temp.data=even[l];
                l++;
            }
            else{
                temp.data=odd[k];
                k++;
            }
            temp=temp.next;
        }
        return head;
    }
}
